{"version":3,"sources":["components/NavBar/index.js","components/Jumbotron/index.js","components/Wrapper/index.js","components/Image/index.js","components/Game/index.js","App.js","index.js"],"names":["NavBar","_ref","message","score","topScore","react_default","a","createElement","className","href","Jumbotron","Wrapper","props","children","Image","handleClick","_this$props","_this","selected","id","resetScore","incrementScore","_this2","this","_this$props2","alt","src","onClick","Component","Game","state","images","imageData","navBarMessage","imagesCopy","map","image","Object","objectSpread","setState","toConsumableArray","forEach","prevState","Math","max","renderImages","array","counter","length","index","floor","random","temp","shuffle","components_Image","key","name","_this$state","components_NavBar","components_Jumbotron","components_Wrapper","React","App","components_Game","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.92d478b8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction NavBar({message, score, topScore}) {\n  return (\n    <nav className=\"navbar sticky-top navbar-dark bg-dark\">\n      <a className=\"ClickyGame\" href=\"/\">Clicky Game</a>\n      <a className=\"Message\" href=\"/\">{message}</a>\n      <a className=\"Score\" href=\"/\">Score: {score} | Top Score: {topScore}</a>\n    </nav>\n  );\n}\n\nexport default NavBar;\n\n\n\n","import React from \"react\";\nimport \"./style.css\";\n\n\n\nfunction Jumbotron() {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header h1\">Clicky Game!</h1>\n      <h2 className=\"header h2\">Click on an image to increase your score, but don't click on any more than once. Good luck!</h2>\n    </header>\n  );\n}\n\nexport default Jumbotron;\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n\n\nclass Image extends Component {\n  handleClick = () => {\n    const { selected, id } = this.props;\n    if (selected) {\n      this.props.resetScore();\n    } else {\n      this.props.incrementScore(id);\n    }\n  }\n\n  render() {\n    const { id, alt, src } = this.props;\n    return (\n      <div className=\"img-container\">\n        <img\n          alt={alt}\n          src={src}\n          onClick={() => this.handleClick(id)}\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default Image;\n\n\n","import React from \"react\";\nimport NavBar from \"../NavBar\";\nimport Jumbotron from \"../Jumbotron\";\nimport Wrapper from \"../Wrapper\";\nimport Image from \"../Image\";\nimport imageData from \"../../images.json\";\n\n\n// from stackoverflow: https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\nfunction shuffle(array) {\n  let counter = array.length;\n\n  // While there are elements in the array\n  while (counter > 0) {\n    // Pick a random index\n    let index = Math.floor(Math.random() * counter);\n\n    // Decrease counter by 1\n    counter--;\n\n    // And swap the last element with it\n    let temp = array[counter];\n    array[counter] = array[index];\n    array[index] = temp;\n  }\n\n  return array;\n}\n\nclass Game extends React.Component {\n  state = {\n    images: imageData,\n    navBarMessage: \"Click an image to begin!\",\n    score: 0,\n    topScore: 0,\n  };\n\n  resetScore = () => {\n    const imagesCopy = this.state.images.map(image => ({ ...image, selected: false }))\n\n    this.setState({\n      images: imagesCopy,\n      score: 0,\n      navBarMessage: \"You guessed incorrectly. Try again.\"\n    });\n  }\n\n  incrementScore = id => {\n    const imagesCopy = [...this.state.images];\n    imagesCopy.forEach(image => {\n      if (image.id === id) {\n        image.selected = true;\n      }\n    });\n\n    this.setState(prevState => ({\n      images: imagesCopy,\n      score: prevState.score + 1,\n      topScore: Math.max(prevState.topScore, prevState.score + 1),\n      navBarMessage: \"You guessed correctly!\"\n    }))\n  }\n\n  renderImages = () => {\n    const shuffledImages = shuffle([...this.state.images]) || [];\n\n    return shuffledImages.map(image =>\n      <Image\n        key={image.id}\n        id={image.id}\n        alt={image.name}\n        src={image.image}\n        selected={image.selected}\n        resetScore={this.resetScore}\n        incrementScore={this.incrementScore}\n      />\n    )\n  }\n\n  render() {\n    const { navBarMessage, score, topScore } = this.state;\n\n    return (\n      <div>\n        <NavBar\n          message={navBarMessage}\n          score={score}\n          topScore={topScore}\n        />\n        <Jumbotron />\n        <Wrapper>\n          {this.renderImages()}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport Game from \"./components/Game\";\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}